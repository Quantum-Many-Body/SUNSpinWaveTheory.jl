var documenterSearchIndex = {"docs":
[{"location":"examples/Introduction/","page":"Introduction","title":"Introduction","text":"CurrentModule = SUNSpinWaveTheory","category":"page"},{"location":"examples/Introduction/#examples","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"examples/Introduction/","page":"Introduction","title":"Introduction","text":"Here are some examples to illustrate how this package could be used.","category":"page"},{"location":"examples/Introduction/","page":"Introduction","title":"Introduction","text":"Pages = [\n        \"SU(2)HeisenbergSquareAFM.md\",\n        \"SU(4)HeisenbergHoneycombAFM.md\",\n        ]\nDepth = 2","category":"page"},{"location":"examples/SU(4)HeisenbergHoneycombAFM/","page":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","title":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","text":"CurrentModule = SUNSpinWaveTheory","category":"page"},{"location":"examples/SU(4)HeisenbergHoneycombAFM/#SU(4)-antiferromagnetic-Heisenberg-modle-on-honeycomb-lattice","page":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","title":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","text":"","category":"section"},{"location":"examples/SU(4)HeisenbergHoneycombAFM/#Magnon-bands-and-inelastic-neutron-spectra-by-SU(4)-linear-spin-wave-theory","page":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","title":"Magnon bands and inelastic neutron spectra by SU(4) linear spin wave theory","text":"","category":"section"},{"location":"examples/SU(4)HeisenbergHoneycombAFM/","page":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","title":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","text":"The following codes could compute the flavor wave dispersions of the SU(4) antiferromagnetic Heisenberg model, i.e. H=J_ij_1=ab=5 Γᵢᵃᵇ Γⱼᵃᵇ - ₐΓᵢᵃΓⱼᵃ :","category":"page"},{"location":"examples/SU(4)HeisenbergHoneycombAFM/","page":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","title":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","text":"using SUNSpinWaveTheory\nusing Plots: plot, plot!\nusing QuantumLattices: Lattice, Point, Hilbert, Algorithm, ReciprocalPath, atol,ReciprocalZone\nusing TightBindingApproximation: EnergyBands\nusing QuantumLattices: Fock, @σ_str, Onsite, expand, bonds, MatrixCoupling, FID, reciprocals, @hexagon_str\nusing StaticArrays: @SVector\nusing QuantumLattices: @indexes, Index, Coupling, Coulomb\n\nlattice = Lattice(\n    [0.0, 0.0], [1/(sqrt(3)),0.0];\n    vectors = [[sqrt(3)/2, -0.50], [0.0, 1.0]],\n    )\ncell = lattice\n\n#construct the Hamiltonian\nσx = [0 1; 1 0]\nσy = [0 -im; im 0]\nσz = [1 0; 0 -1]\nσ0 = [1 0; 0  1]\nΓ¹ = kron(σz, σy); Γ² = kron(σz, σx); Γ³ = kron(σy, σ0);Γ⁴ = kron(σx, σ0);Γ⁵ = kron(σz, σz);\n\n#H=J∑\\_{⟨ij⟩}[∑\\_{1<=a<b<=5}Γᵢᵃᵇ Γⱼᵃᵇ-∑ₐΓᵢᵃΓⱼᵃ] \nΓ(x,y) = (x*y-y*x)/2im\nΓ¹²=(Γ¹*Γ²-Γ²*Γ¹)/2im; Γ¹³=Γ(Γ¹,Γ³);Γ¹⁴=Γ(Γ¹,Γ⁴);Γ¹⁵=Γ(Γ¹,Γ⁵)\nΓ²³=Γ(Γ²,Γ³);Γ²⁴=Γ(Γ²,Γ⁴); Γ²⁵=Γ(Γ²,Γ⁵)\nΓ³⁴=Γ(Γ³,Γ⁴);Γ³⁵=Γ(Γ³,Γ⁵); Γ⁴⁵=Γ(Γ⁴,Γ⁵)\nΓab = [Γ¹²,Γ¹³,Γ¹⁴,Γ¹⁵,Γ²³,Γ²⁴,Γ²⁵,Γ³⁴,Γ³⁵,Γ⁴⁵];\nΓa = [Γ¹, Γ² , Γ³ ,Γ⁴ ,Γ⁵ ]\n\nj, h = 1.0, 0.001\nJmat = zeros(ComplexF64,16,16)\n\nfor m in Γab\n    Jmat[:,:] += kron(m, m)\nend\nfor m in Γa\n    Jmat[:,:] -= kron(m, m)\nend\nhmat = Γ¹²\nf1(bond) = iseven(bond[1].site) ? 1 : -1\n\nJ = SUNTerm(:J, Jmat, 4, 4, 1; value=j)\nJ1 = SUNTerm(:B, hmat, 4, 4, 0; value=h, amplitude=f1)\n\nhilbert = Hilbert(pid=>Fock{:b}(4, 1) for pid in 1:length(cell))\n\nmagneticstructure = MagneticStructure(\n    cell,\n    Dict(1 => [1.5707960439947803, 1.5707963267641, 1.570796326798081, 3.1432634733226568, 3.1430008310022868, 4.2168412327339055],\n         2 => [2.8285525202602516e-7, 1.5708000153983595, 1.5707999995656055, 3.1429367971485704, 3.1430659136725807, 1.075295154664448],\n    )\n)\neng = SUNLSWT(lattice, hilbert, (J, J1), magneticstructure)\n\n#start optimize:\nop = optimorder(eng; numrand = 1);\n\n#the classical energy\nprintln(expand(op[1].Ω).contents[()].value)\n\nantiferromagnet = Algorithm(:SquareAFM, op[1] )\n\n# order parameters\npx = Dict(pid => Γ¹² for pid in 1:length(cell))\npy = Dict(pid => Γ³⁴ for pid in 1:length(cell))\npz = Dict(pid => Γ⁵  for pid in 1:length(cell))\norderpara = [localorder(antiferromagnet.frontend, px),localorder(antiferromagnet.frontend, py),localorder(antiferromagnet.frontend, pz)]\nprintln(orderpara)","category":"page"},{"location":"examples/SU(4)HeisenbergHoneycombAFM/#Band-structure","page":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","title":"Band structure","text":"","category":"section"},{"location":"examples/SU(4)HeisenbergHoneycombAFM/","page":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","title":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","text":"sx = [0       sqrt(3)/2      0      0;\n     sqrt(3)/2   0            1.0    0;\n       0        1.0           0     sqrt(3)/2;\n       0         0           sqrt(3)/2  0\n]\nmx = MatrixCoupling(:, FID, sx, :, :)\nsy = [0       -im*sqrt(3)/2      0      0;\n     im*sqrt(3)/2   0            -1im    0;\n       0        1im           0     -im*sqrt(3)/2;\n       0         0           im*sqrt(3)/2  0\n]\nmy = MatrixCoupling(:, FID, sy, :, :)\nsz = [3/2   0       0      0;\n       0    1/2     0      0;\n       0    0       -1/2   0;\n       0    0       0     -3/2\n]\nmz = MatrixCoupling(:, FID, sz, :, :)\n\npath = ReciprocalPath(reciprocals(lattice), hexagon\"Γ-K-M-Γ,60°\", length=100)\nsx = expand(Onsite(:mu, 1.0+0.0im, mx,amplitude=nothing, modulate=true),bonds(cell,0),hilbert,half=false)\nsy = expand(Onsite(:mu, 1.0+0.0im, my,amplitude=nothing, modulate=true),bonds(cell,0),hilbert,half=false)\nsz = expand(Onsite(:mu, 1.0+0.0im, mz,amplitude=nothing, modulate=true),bonds(cell,0),hilbert,half=false)\nss = @SVector [sx,sy,sz]\n\nins = antiferromagnet(:INS,\n    Spectra{InelasticNeutron}(path, range(0.0, 20, length=501), (ss,ss); fwhm=0.2, scale=identity, gauss=false, atol=1e-9)\n    )\nenergybands = antiferromagnet(:EB, EnergyBands(path; atol=1e-9))\n\nplt = plot()\nplot!(plt, ins)\nplot!(plt, energybands, color=:white, linestyle=:dash, linealpha=0.1) \n#display(plt)","category":"page"},{"location":"examples/SU(4)HeisenbergHoneycombAFM/#Spectra-of-multipole-operators","page":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","title":"Spectra of multipole operators","text":"","category":"section"},{"location":"examples/SU(4)HeisenbergHoneycombAFM/","page":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","title":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","text":"#multipole\nquadrupolar = [multipoleOperator(3//2,3//2,2,m) for m=-2:2]\nMcouplings = [MatrixCoupling(:, FID, i, :, :) for i in quadrupolar]   \nM₋₂ = expand(Onsite(:mu1, 1.0+0.0im, Mcouplings[1],amplitude=nothing, modulate=true), bonds(cell,0), hilbert, half=false)\nM₋₁ = expand(Onsite(:mu2, 1.0+0.0im, Mcouplings[2],amplitude=nothing, modulate=true), bonds(cell,0), hilbert, half=false)\nM₀ = expand(Onsite(:mu3,  1.0+0.0im, Mcouplings[3],amplitude=nothing, modulate=true), bonds(cell,0), hilbert, half=false)\nM₁ = expand(Onsite(:mu4,  1.0+0.0im, Mcouplings[4],amplitude=nothing, modulate=true), bonds(cell,0), hilbert, half=false)\nM₂ = expand(Onsite(:mu5,  1.0+0.0im, Mcouplings[5],amplitude=nothing, modulate=true), bonds(cell,0), hilbert, half=false)\nMss = [M₋₂, M₋₁, M₀, M₁, M₂]\nMssd = [M₋₂', M₋₁', M₀', M₁', M₂']\n\ninsmultipole = antiferromagnet(:Multipole,\n    Spectra{Multipole}(path, range(0.0, 20, length=501), (Mss, Mssd); fwhm=0.2, gauss=true, scale=x->x, atol=1e-9)\n    )\nplt1 = plot()\nplot!(plt1, insmultipole, clims=(0, 100))\nplot!(plt1, energybands, color=:white, linestyle=:dash, linealpha=0.1)\n#display(plt1)","category":"page"},{"location":"examples/SU(4)HeisenbergHoneycombAFM/#Spectra-of-multipole-operators-with-E1.0","page":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","title":"Spectra of multipole operators with E=1.0","text":"","category":"section"},{"location":"examples/SU(4)HeisenbergHoneycombAFM/","page":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","title":"SU(4) antiferromagnetic Heisenberg modle on honeycomb lattice","text":"#Ecut\nnx, ny = 32, 32\nb₁, b₂ = reciprocals(lattice)\nzone = ReciprocalZone([b₁, b₂-b₁/2], \n    0=>1, 0=>1; length=(nx, ny),\n    ends=((true, true), (true, true))\n    )\ninszone = antiferromagnet(:MultipoleZone,\n    Spectra{Multipole}(zone, range(0.0, 20, length=501), (Mss, Mssd); fwhm=0.2, gauss=true, scale=identity, atol=1e-9)\n    )\necut, dE = 3.0, 0.4\n# data = spectraEcut(inszone[2], ecut, dE, nx, ny)\nplt2 = plot()\nplot!(plt2, inszone, ecut, dE)\n#display(plt2)","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = SUNSpinWaveTheory","category":"page"},{"location":"#SUNSpinWaveTheory","page":"Home","title":"SUNSpinWaveTheory","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SUNSpinWaveTheory.","category":"page"},{"location":"#Introduction","page":"Home","title":"Introduction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SU(N) spin wave theory for free quantum lattice systems based on the QuantumLattices pack and the TightBindingApproximation pack.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#Getting-Started","page":"Home","title":"Getting Started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Examples of SU(N) spin-wave theory for quantum lattice system","category":"page"},{"location":"#Manuals","page":"Home","title":"Manuals","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [SUNSpinWaveTheory]","category":"page"},{"location":"#QuantumLattices.DegreesOfFreedom.Hilbert-Tuple{QuantumLattices.DegreesOfFreedom.Hilbert{<:QuantumLattices.QuantumSystems.Fock{:b}}, MagneticStructure}","page":"Home","title":"QuantumLattices.DegreesOfFreedom.Hilbert","text":"Hilbert(hilbert::Hilbert{<:Fock{:b}}, magneticstructure::MagneticStructure)\n\nGet the corresponding Hilbert space of the original one after the Holstein-Primakoff transformation. \n\n\n\n\n\n","category":"method"},{"location":"#QuantumLattices.DegreesOfFreedom.Metric-Tuple{SUNSpinWaveTheory.SUNMagnonic, QuantumLattices.DegreesOfFreedom.Hilbert{<:QuantumLattices.QuantumSystems.Fock{:b}}}","page":"Home","title":"QuantumLattices.DegreesOfFreedom.Metric","text":"Metric(::SUNMagnonic, hilbert::Hilbert{<:Fock{:b}}) -> OperatorUnitToTuple\n\nGet the index-to-tuple metric for a quantum spin system after the Holstein-Primakoff transformation.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.HPTransformation","page":"Home","title":"SUNSpinWaveTheory.HPTransformation","text":"HPTransformation{S<:Operators, U<:CompositeIndex, M<:MagneticStructure} <: UnitSubstitution{U, S}\n\nHolstein-Primakoff transformation.\n\n\n\n\n\n","category":"type"},{"location":"#SUNSpinWaveTheory.InelasticNeutron","page":"Home","title":"SUNSpinWaveTheory.InelasticNeutron","text":"InelasticNeutron <: SpectraKind{:INS}\n\nInelastic Neutron Scattering Spectra of quantum lattice system.\n\n\n\n\n\n","category":"type"},{"location":"#SUNSpinWaveTheory.MagneticStructure","page":"Home","title":"SUNSpinWaveTheory.MagneticStructure","text":"MagneticStructure{L<:AbstractLattice, P<:Int, D<:Number, T<:Complex}\n\nThe magnetic structure of an ordered quantum lattice system. The cell is a magnetic cell.\n\n\n\n\n\n","category":"type"},{"location":"#SUNSpinWaveTheory.MagneticStructure-Tuple{QuantumLattices.Spatials.AbstractLattice, Dict{<:Int64, <:AbstractVector}}","page":"Home","title":"SUNSpinWaveTheory.MagneticStructure","text":"MagneticStructure(cell::AbstractLattice, moments::Dict{<:Int, <:AbstractVector})\n(ms::MagneticStructure)(orders::Dict{<:Int, <:AbstractMatrix}) -> Dict{<:Int, <:Number}\n\n1).Construct the magnetic structure on a given lattice with the given moments. The moment is given by the angles (θ₁,θ₂,...,ψ₁,ψ₂,...).  2).Get order parameters for every site. e.g. |gs⟩ = ms.rotations[i][1,:] where gs = classical ground state; ⟨σᵢˣ⟩ = ⟨gs|σᵢˣ|gs⟩.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.Multipole","page":"Home","title":"SUNSpinWaveTheory.Multipole","text":"Multipole <: SpectraKind{:Multipole}\n\nMultipole Scattering Spectra of quantum lattice system. (∑{α}s{α}*s_{α})\n\n\n\n\n\n","category":"type"},{"location":"#SUNSpinWaveTheory.SUNLSWT","page":"Home","title":"SUNSpinWaveTheory.SUNLSWT","text":"SUNLSWT{K<:TBAKind{:BdG}, L<:AbstractLattice, Hₛ<:OperatorGenerator, HP<:HPTransformation, Ω<:Image, H<:Image} <: AbstractTBA{K, H, AbstractMatrix}\n\nSU(N) Linear spin wave theory for magnetically ordered quantum lattice systems.\n\n\n\n\n\n","category":"type"},{"location":"#SUNSpinWaveTheory.SUNLSWT-Tuple{QuantumLattices.Spatials.AbstractLattice, QuantumLattices.DegreesOfFreedom.Hilbert, Tuple{Vararg{QuantumLattices.DegreesOfFreedom.Term}}, MagneticStructure}","page":"Home","title":"SUNSpinWaveTheory.SUNLSWT","text":"SUNLSWT(\n    lattice::AbstractLattice, \n    hilbert::Hilbert, \n    terms::Tuple{Vararg{Term}}, \n    magneticstructure::MagneticStructure; \n    neighbors::Union{Nothing, Int, Neighbors}=nothing, \n    boundary::Boundary=plain\n)\n\nConstruct a SUNLSWT. lattice is the original lattice.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.SUNMagnonic","page":"Home","title":"SUNSpinWaveTheory.SUNMagnonic","text":"SUNMagnonic <: TBAKind{:BdG}\n\nMagnonic quantum lattice system.\n\n\n\n\n\n","category":"type"},{"location":"#SUNSpinWaveTheory.Spectra","page":"Home","title":"SUNSpinWaveTheory.Spectra","text":"Spectra{K<:SpectraKind, P<:ReciprocalSpace, E<:AbstractVector, S<:Operators, O} <: Action\n\nSpectra of 'magnetically' ordered quantum lattice systems by SU(N) linear spin wave theory.\n\n\n\n\n\n","category":"type"},{"location":"#SUNSpinWaveTheory.SpectraKind","page":"Home","title":"SUNSpinWaveTheory.SpectraKind","text":"SpectraKind{K}\nThe kind of a spectrum calculation.\n\n\n\n\n\n","category":"type"},{"location":"#Base.nameof-Tuple{QuantumLattices.Frameworks.Algorithm, QuantumLattices.Frameworks.Assignment{<:Spectra}, Float64}","page":"Home","title":"Base.nameof","text":"nameof(alg::Algorithm, assign::Assignment, ecut::Float64) -> String\n\nGet the name of the combination of an algorithm, an assignment and ecut.\n\n\n\n\n\n","category":"method"},{"location":"#QuantumLattices.add!-Tuple{Matrix, TightBindingApproximation.TBAMatrixRepresentation{SUNSpinWaveTheory.SUNMagnonic}, QuantumLattices.QuantumOperators.Operator{<:Number, <:Tuple{QuantumLattices.DegreesOfFreedom.CompositeIndex{<:QuantumLattices.DegreesOfFreedom.Index{Int64, <:QuantumLattices.QuantumSystems.FID{:b}}}, QuantumLattices.DegreesOfFreedom.CompositeIndex{<:QuantumLattices.DegreesOfFreedom.Index{Int64, <:QuantumLattices.QuantumSystems.FID{:b}}}}}}","page":"Home","title":"QuantumLattices.add!","text":"add!(dest::Matrix,\n    mr::TBAMatrixRepresentation{SUNMagnonic},\n    m::Operator{<:Number, <:ID{CompositeIndex{<:Index{Int, <:FID{:b}}}, 2}};\n    atol=atol/5, \n    kwargs...\n) -> typeof(dest)\n\nGet the matrix representation of an operator and add it to destination.\n\n\n\n\n\n","category":"method"},{"location":"#RecipesBase.apply_recipe","page":"Home","title":"RecipesBase.apply_recipe","text":"@recipe  plot(pack::Tuple{Algorithm{<:SUNLSWT}, Assignment{<:Spectra}}, Ecut::Float64, dE::Float64=1e-3)\n\nDefine the recipe for the visualization of an assignment with Ecut and data of an algorithm.\n\n\n\n\n\n","category":"function"},{"location":"#RecipesBase.apply_recipe-Tuple{AbstractDict{Symbol, Any}, Tuple{QuantumLattices.Frameworks.Algorithm{<:SUNLSWT}, QuantumLattices.Frameworks.Assignment{<:Spectra}}, AbstractVector{Float64}}","page":"Home","title":"RecipesBase.apply_recipe","text":"@recipe plot(pack::Tuple{Algorithm{<:SUNLSWT}, Assignment{<:Spectra}}, parameters::AbstractVector{Float64})\n\nDefine the recipe for the visualization of an assignment with parameters (title) of an algorithm.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.SUNTerm","page":"Home","title":"SUNSpinWaveTheory.SUNTerm","text":"SUNTerm(\n    id::Symbol, \n    J₁₂₃₄::Array{<:Number, 4}, \n    bondkind::Int=1;\n    value = 1,\n    amplitude::Union{Function, Nothing}=nothing, \n    modulate::Union{Function, Bool}=false\n) -> Coulomb\n\nHamiltionian: (J_i1i2j3j4b_i1b_i2b_j3b_j4)\n\n\n\n\n\n","category":"function"},{"location":"#SUNSpinWaveTheory.SUNTerm-2","page":"Home","title":"SUNSpinWaveTheory.SUNTerm","text":"SUNTerm(\n    id::Symbol, \n    Jᵤᵥ::Array{<:Number, 2}, \n    bondkind::Int=0;\n    value = 1, \n    amplitude::Union{Function, Nothing}=nothing,\n    modulate::Union{Function, Bool}=false\n    ) -> Onsite\n\n\n\n\n\n","category":"function"},{"location":"#SUNSpinWaveTheory.SUNTerm-3","page":"Home","title":"SUNSpinWaveTheory.SUNTerm","text":"SUNTerm(\n    id::Symbol, \n    J₁₂₃₄::Array{<:Number, 2}, \n    dimᵢ::Int, \n    dimⱼ::Int, \n    bondkind::Int=1;\n    value=1, \n    amplitude::Union{Function, Nothing}=nothing, \n    modulate::Union{Function, Bool}=false\n) -> Term\n\nReturn the Term type. J₁₂₃₄ is the coefficience of Hamiltionian including the exchange term and onsite term, i.e. (J_i1j2i3j4b_i1b_j2b_i3b_j4) + (Bᵢᵤᵥbᵢᵤbᵢᵥ ) dimᵢ and dimⱼ are the dimensions of local Hilbert space on sites i and j, respectively.\n\n\n\n\n\n","category":"function"},{"location":"#SUNSpinWaveTheory.fluctuation-Tuple{SUNLSWT, QuantumLattices.Spatials.BrillouinZone, Int64, Int64}","page":"Home","title":"SUNSpinWaveTheory.fluctuation","text":"fluctuation(sunlswt::SUNLSWT, bz::BrillouinZone, site::Int, nbonson::Int; imagtol=1e-8) -> Float64\nfluctuation(sunlswt::SUNLSWT, bz::BrillouinZone; imagtol=1e-8) -> Dict{<:Int, Float64}\n\nTo calculate b_0^b_0 with respect to the quantum ground state |0⟩ at zero temperature.  \n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.kdosOperator-Tuple{Matrix{<:Number}, Int64, Union{Int64, QuantumLattices.Spatials.AbstractLattice}}","page":"Home","title":"SUNSpinWaveTheory.kdosOperator","text":"kdosOperator(u::Matrix{<:Number}, site::Int, lattice::Union{<:AbstractLattice, Int}) -> Operators\n\nReturn Operators for kDOS case. u = ⟨α|site,orbital⟩, where |site,orbital⟩ => b_{site,orbital}, |α⟩ is the target state.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.localorder-Tuple{SUNLSWT, Dict{Int64, <:Matrix{<:Number}}}","page":"Home","title":"SUNSpinWaveTheory.localorder","text":"localorder(sunlswt::SUNLSWT, orders::Dict{Int, <:Matrix{T}}) where T<:Number -> Dict{Int, <:Number}\n\nReturn order parameters of each site, <classical gs|o|classical gs>. orders[pid] is the matrix of physical observable.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.matrixcoef-Tuple{SUNLSWT}","page":"Home","title":"SUNSpinWaveTheory.matrixcoef","text":"matrixcoef(sunlswt::SUNLSWT) -> Hermitian\n\nReturn the coefficience of exchange interactions, i.e. ∑(Jᵢ₁ⱼ₂ⱼ₃ᵢ₄b†ᵢ₁b†ⱼ₂bⱼ₃bᵢ₄) + ∑(Bᵢᵤᵥb†ᵢᵤbᵢᵥ )\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.multipoleOperator-NTuple{4, Union{Rational{Int64}, Int64}}","page":"Home","title":"SUNSpinWaveTheory.multipoleOperator","text":"multipoleOperator(j₁::Union{Int,Rational{Int}}, j₂::Union{Int,Rational{Int}}, j::Union{Int,Rational{Int}}, m::Union{Int,Rational{Int}}) -> Array{Float64}\n\nConstruct the matrix of multipole operator, i.e. M_jm^j₁j₂ = _m₁m₂ (-1)^j₂-m₂C_m₁-m₂m^j₁j₂j b_j₁m₁b_j₂m₂ with M_jm^j₁j₂=M_j-m^j₂j₁(-1)^j₂-j₁+m. e.g. the basis of dipole matrix is [|1⟩, |0⟩, |-1⟩].\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.optimorder-Tuple{SUNLSWT}","page":"Home","title":"SUNSpinWaveTheory.optimorder","text":"optimorder(sunlswt::SUNLSWT; numrand::Int = 0, method = LBFGS(), g_tol = 1e-12, optionskwargs... ) -> Tuple{SUNLSWT,Union{Optim.MultivariateOptimizationResults,Nothing}}\n\nOptimize the ground state of Hamiltionian, i.e. ⟨T|H|T⟩, see DOI: 10.1103/PhysRevB.97.205106  numrand is the number of the optimization. optionskwargs is the keywords of Optim.Options(gtol=gtol,optionskwargs...)\n\nReferences\n\nZhao-Yang Dong, Wei Wang, and Jian-Xin Li, SU(N) spin-wave theory: Application to spin-orbital Mott insulators, Physical Review B 97, 205106 (2018)\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.optimorder2-Tuple{SUNLSWT, Vector{Float64}, Vector{Float64}}","page":"Home","title":"SUNSpinWaveTheory.optimorder2","text":"optimorder2(sunlswt::SUNLSWT, ub::Vector{Float64}, x₀::Vector{Float64}; numrand::Int = 0, rule::Function=x->x, method = LBFGS(), g_tol = 1e-12, optionskwargs... ) -> Tuple{SUNLSWT, Union{Optim.MultivariateOptimizationResults, Nothing}}\n\nOptimize the ground state of Hamiltionian. If the all degrees of freedom is considered, the Function optimorder is recommended. Function rule gives the transformation of the selected degrees of freedom to all degrees of freedom.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.optimorder2-Tuple{SUNLSWT}","page":"Home","title":"SUNSpinWaveTheory.optimorder2","text":"optimorder2(sunlswt::SUNLSWT; numrand::Int = 0,rule::Function=x->x, method = LBFGS(), g_tol = 1e-12, optionskwargs... ) -> Tuple{SUNLSWT, Union{Optim.MultivariateOptimizationResults, Nothing}}\n\nOptimize the ground state of Hamiltionian, i.e. ⟨T|H|T⟩. If the all degrees of freedom is considered, the Function optimorder is recommended.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.quantumGSenergy-Tuple{SUNLSWT, Int64}","page":"Home","title":"SUNSpinWaveTheory.quantumGSenergy","text":"quantumGSenergy(sunlswt::SUNLSWT, bz::BrillouinZone; imagtol=1e-8) -> Float64\nquantumGSenergy(sunlswt::SUNLSWT, nk::Int; imagtol=1e-8) -> Float64\n\nCalculate the quantum-ground-state energy per magnetic unit cell. E=E_calssicalN_mc-1(2N_mc)*_kαω_kα - 1(4N_mc)_kTr(H(k)), where N_mc is the number of magnetic unit cell\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.rotation-Union{Tuple{T}, Tuple{AbstractVector{T}, Vector{Matrix{Complex{Int64}}}}} where T<:Number","page":"Home","title":"SUNSpinWaveTheory.rotation","text":"rotation(sitapsi::T, generators::Vector{Matrix{Complex{Int}}}}) where T<:AbstractVector{<:Number} -> Matrix{ComplexF64}\n\nGet the rotation matrix which rotates the |0⟩ state to the target state |T⟩=U(θ₁,θ₂,...,ψ₁,ψ₂,...)b⁰† |0⟩; T†ᵥ = ∑ᵤUᵥᵤ*bᵘ†. The detail is given in doi:10.1103/PhysRevB.97.205106.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.rotation_gen-Tuple{Int64}","page":"Home","title":"SUNSpinWaveTheory.rotation_gen","text":"rotation_gen(n::Int) -> Vector{Matrix{Complex{Int}}}\n\nReturn the generator matrices of SU(n) group.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.spectraEcut-Tuple{QuantumLattices.Frameworks.Assignment{<:Spectra}, Float64, Float64}","page":"Home","title":"SUNSpinWaveTheory.spectraEcut","text":"spectraEcut(ass::Assignment{<:Spectra}, Ecut::Float64, dE::Float64) -> Tuple{Vector{Float64}, Vector{Float64}, Matrix{Float64}}\n\nConstruct the spectra with fixed energy. The energy of abs(energy-Ecut) <= dE is selected. nx and ny are the number of x and y segments of ReciprocalZone, respectively.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.suncouplings-Tuple{Array{<:Number, 4}}","page":"Home","title":"SUNSpinWaveTheory.suncouplings","text":"suncouplings(J₁₂₃₄::Array{<:Number,4}) -> OperatorSum\n\nObtain the Couplings for exchange term in Hamiltionian. Like (J_i1i2j3j4b_i1b_i2b_j3b_j4)\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.suncouplings-Tuple{Matrix{<:Number}}","page":"Home","title":"SUNSpinWaveTheory.suncouplings","text":"suncouplings(Bᵤᵥ::Array{<:Number, 2})   -> MatrixCoupling\n\nObtain the Couplings for onsite term in Hamiltionian. Like ∑(Bᵢᵤᵥb†ᵢᵤbᵢᵥ )\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingApproximation.commutator-Tuple{SUNSpinWaveTheory.SUNMagnonic, QuantumLattices.DegreesOfFreedom.Hilbert{<:QuantumLattices.QuantumSystems.Fock{:b}}}","page":"Home","title":"TightBindingApproximation.commutator","text":"commutator(::SUNMagnonic, hilbert::Hilbert{<:Fock{:b}}) -> Diagonal\n\nGet the commutation relation of the Holstein-Primakoff bosons.\n\n\n\n\n\n","category":"method"},{"location":"#SUNSpinWaveTheory.@rotation_gen-Tuple{Any}","page":"Home","title":"SUNSpinWaveTheory.@rotation_gen","text":"@rotation_gen ::Int -> Vector{Matrix{Complex{Int}}}\n\nReturn the generator matrices of SU(n) group.\n\n\n\n\n\n","category":"macro"},{"location":"examples/SU(2)HeisenbergSquareAFM/","page":"SU(2) antiferromagnetic Heisenberg modle on square lattice","title":"SU(2) antiferromagnetic Heisenberg modle on square lattice","text":"CurrentModule = SUNSpinWaveTheory","category":"page"},{"location":"examples/SU(2)HeisenbergSquareAFM/#SU(2)-antiferromagnetic-Heisenberg-modle-on-square-lattice","page":"SU(2) antiferromagnetic Heisenberg modle on square lattice","title":"SU(2) antiferromagnetic Heisenberg modle on square lattice","text":"","category":"section"},{"location":"examples/SU(2)HeisenbergSquareAFM/#Magnon-bands,-inelastic-neutron-spectra-and-multipole-spctra-by-SU(N)-linear-spin-wave-theory","page":"SU(2) antiferromagnetic Heisenberg modle on square lattice","title":"Magnon bands, inelastic neutron spectra and multipole spctra by SU(N) linear spin wave theory","text":"","category":"section"},{"location":"examples/SU(2)HeisenbergSquareAFM/","page":"SU(2) antiferromagnetic Heisenberg modle on square lattice","title":"SU(2) antiferromagnetic Heisenberg modle on square lattice","text":"The following codes could compute the spin wave dispersions of the antiferromagnetic Heisenberg model on the square lattice.","category":"page"},{"location":"examples/SU(2)HeisenbergSquareAFM/","page":"SU(2) antiferromagnetic Heisenberg modle on square lattice","title":"SU(2) antiferromagnetic Heisenberg modle on square lattice","text":"using SUNSpinWaveTheory\nusing Plots: plot, plot!\nusing QuantumLattices: Lattice, Point, Hilbert, Algorithm, ReciprocalPath, @rectangle_str, atol,ReciprocalZone\nusing TightBindingApproximation: EnergyBands\nusing QuantumLattices: Fock, @σ_str, Onsite, expand, bonds, reciprocals, MatrixCoupling, FID\nusing StaticArrays: @SVector\nusing Optim:  ConjugateGradient\n\n#define square lattice and magnetic unit cell\nlattice = Lattice(\n     [0.0, 0.0];\n    vectors=[[1.0, 0.0], [0.0, 1.0]]\n    )\n\ncell = Lattice(\n    [0.0, 0.0],\n    [1.0, 0.0];\n    vectors=[[1.0, 1.0], [1.0, -1.0]]\n    )\n\n#define antiferromagnetic Heisenberg model with magnetic field\nσx = [0 1; 1 0]\nσy = [0 -im; im 0]\nσz = [1 0; 0 -1]\nj, B = 1.0, -0.01\nJmat = 1/4*(kron(σx,σx) + kron(σy,σy) + kron(σz,σz))\nhmat = σy/2\nJ = SUNTerm(:J, Jmat, 2, 2, 1; value=j, modulate=true)\nh = SUNTerm(:hy, hmat, 2, 2, 0; amplitude=( x-> iseven(x[1].site) ? -1 : 1), value=B, modulate=true )\n\nhilbert = Hilbert(pid=>Fock{:b}(2, 1) for pid in 1:length(cell))\n\nmagneticstructure = MagneticStructure(\n    cell,\n    Dict(pid=>(iseven(pid) ?  Float64[pi/2, pi/2] : Float64[0., 0.] ) for pid in 1:length(cell))\n    )\n\n#initialization of SUNLSWT engine\neng = SUNLSWT(lattice, hilbert, (J, h), magneticstructure)\n\n#optimize the ground state with four random steps\nop = optimorder2(eng; method = ConjugateGradient(), numrand = 4);\n\n#the classical energy\nprintln(\"The classical energy ≈ -1.01 :\", isapprox(op[2].minimum, -1.01, atol=atol))\n\n# The quantum-ground-state energy per magnetic unit cell\nprintln(\"The zero-point energy ≈ -1.3223667 :\", isapprox(quantumGSenergy(op[1], 32, imagtol=1e-14), -1.322366749444462, atol=atol))\n\nantiferromagnet = Algorithm(:SquareAFM, op[1] )\n\n#calculate the order parameters\npx = Dict(pid => σx for pid in 1:length(cell))\npy = Dict(pid => σy for pid in 1:length(cell))\npz = Dict(pid => σz for pid in 1:length(cell))\n\nprintln(\"σx on each site: \", localorder(op[1], px))\nprintln(\"σy on each site: \", localorder(op[1], py))\nprintln(\"σz on each site: \", localorder(op[1], pz))","category":"page"},{"location":"examples/SU(2)HeisenbergSquareAFM/#Magnon-band-structure","page":"SU(2) antiferromagnetic Heisenberg modle on square lattice","title":"Magnon band structure","text":"","category":"section"},{"location":"examples/SU(2)HeisenbergSquareAFM/","page":"SU(2) antiferromagnetic Heisenberg modle on square lattice","title":"SU(2) antiferromagnetic Heisenberg modle on square lattice","text":"path = ReciprocalPath(reciprocals(lattice), rectangle\"Γ-X-M-Γ\", length=100)\nmx, my, mz = MatrixCoupling(:, FID, σ\"x\", :, :), MatrixCoupling(:, FID, σ\"y\", :, :), MatrixCoupling(:, FID, σ\"z\", :, :)\nsx = expand(Onsite(:mx, 0.5+0.0im, mx,amplitude=nothing, modulate=true), bonds(cell,0), hilbert, half=false)\nsy = expand(Onsite(:my, 0.5+0.0im, my,amplitude=nothing, modulate=true), bonds(cell,0), hilbert, half=false)\nsz = expand(Onsite(:mz, 0.5+0.0im, mz,amplitude=nothing, modulate=true), bonds(cell,0), hilbert, half=false)\nss = @SVector [sx,sy,sz]\n\nins = antiferromagnet(:INS,\n    Spectra{InelasticNeutron}(path, range(0.0, 2.5, length=251), (ss,ss); fwhm=0.1, scale=log, gauss=false)\n    )\nenergybands = antiferromagnet(:EB, EnergyBands(path))\nplt = plot()\nplot!(plt, ins)\nplot!(plt, energybands, color=:red, linestyle=:dash)\n#display(plt)","category":"page"},{"location":"examples/SU(2)HeisenbergSquareAFM/#Inelastic-neutron-spectra","page":"SU(2) antiferromagnetic Heisenberg modle on square lattice","title":"Inelastic neutron spectra","text":"","category":"section"},{"location":"examples/SU(2)HeisenbergSquareAFM/","page":"SU(2) antiferromagnetic Heisenberg modle on square lattice","title":"SU(2) antiferromagnetic Heisenberg modle on square lattice","text":"insmultipole = antiferromagnet(:Multipole,\n    Spectra{Multipole}(path, range(0.0, 2.5, length=251), (ss,ss); fwhm=0.1, scale=log)\n    )\nplt1 = plot()\nplot!(plt1, energybands, color=:red, linestyle=:dash)\nplot!(plt1, insmultipole)\n#display(plt1)","category":"page"},{"location":"examples/SU(2)HeisenbergSquareAFM/#Inelastic-neutron-spectra-with-E1.0","page":"SU(2) antiferromagnetic Heisenberg modle on square lattice","title":"Inelastic neutron spectra with E=1.0","text":"","category":"section"},{"location":"examples/SU(2)HeisenbergSquareAFM/","page":"SU(2) antiferromagnetic Heisenberg modle on square lattice","title":"SU(2) antiferromagnetic Heisenberg modle on square lattice","text":"nx, ny = 32, 32\nzone = ReciprocalZone(reciprocals(lattice), 0=>1, 0=>1; length=(nx, ny), ends=((true, true), (true, true)))\ninszone = antiferromagnet(:INSZ,\n    Spectra{InelasticNeutron}(zone, range(0.0, 2.5, length=251), (ss,ss); fwhm=0.1, scale=log)\n    )\necut,dE = 1.0, 0.1\n# data = spectraEcut(inszone[2], ecut, dE)\nplt2 = plot()\nplot!(plt2, inszone, ecut, dE)\n#display(plt2)","category":"page"}]
}
